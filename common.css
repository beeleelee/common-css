/* http://meyerweb.com/eric/tools/css/reset/
   v4.0 | 20180602
   License: none (public domain)
*/

html, body, div, span, applet, object, iframe,
h1, h2, h3, h4, h5, h6, p, blockquote, pre,
a, abbr, acronym, address, big, cite, code,
del, dfn, em, img, ins, kbd, q, s, samp,
small, strike, strong, sub, sup, tt, var,
b, u, i, center,
dl, dt, dd, ol, ul, li,
fieldset, form, label, legend,
table, caption, tbody, tfoot, thead, tr, th, td,
article, aside, canvas, details, embed,
figure, figcaption, footer, header, hgroup,
main, menu, nav, output, ruby, section, summary,
time, mark, audio, video {
	margin: 0;
	padding: 0;
	border: 0;
	font-size: 100%;
	font: inherit;
	vertical-align: baseline;
}
/* HTML5 display-role reset for older browsers */
article, aside, details, figcaption, figure,
footer, header, hgroup, main, menu, nav, section {
	display: block;
}
/* HTML5 hidden-attribute fix for newer browsers */
*[hidden] {
    display: none;
}
body {
	line-height: 1;
}
ol, ul {
	list-style: none;
}
blockquote, q {
	quotes: none;
}
blockquote:before, blockquote:after,
q:before, q:after {
	content: '';
	content: none;
}
table {
	border-collapse: collapse;
	border-spacing: 0;
}
/**
 *  box-sizing reset
 *  source from https://30-seconds.github.io/30-seconds-of-css/
 */
html {
  box-sizing: border-box;
}
*, 
*::before,
*::after {
  box-sizing: inherit;
}
.content-box {
  box-sizing: content-box;
}
/**
 * System font stack 
 * source from https://30-seconds.github.io/30-seconds-of-css/
 */
body {
  font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen-Sans, Ubuntu,
    Cantarell, 'Helvetica Neue', Helvetica, Arial, sans-serif;
}
/**
 *  clearfix
 *  source from https://30-seconds.github.io/30-seconds-of-css/
 */
.clearfix::after {
  content: '';
  display: block;
  clear: both;
}
/**
 *  unselectable
 *  source from https://30-seconds.github.io/30-seconds-of-css/
 */
.unselectable {
  user-select: none;
}
/**
 *  donut-spinner
 *  source from https://30-seconds.github.io/30-seconds-of-css/#donut-spinner
 */
@keyframes donut-spin {
  0% {
    transform: rotate(0deg);
  }
  100% {
    transform: rotate(360deg);
  }
}
.donut {
  display: inline-block;
  border: 4px solid rgba(0, 0, 0, 0.1);
  border-left-color: #7983ff;
  border-radius: 50%;
  width: 30px;
  height: 30px;
  animation: donut-spin 1.2s linear infinite;
}
/**
 *  flexbox 
 */
.flex-row {
  display: flex;
  flex-direction: row;
}
.flex-column {
  display: flex;
  flex-direction: column;
}
.flex-center {
  justify-content: center;
  align-items: center;
}
.main-center {
  justify-content: center;
}
.cross-center {
  align-items: center;
}
.flex-wrap {
  flex-wrap: wrap;
}
.flex-1{
  flex: 1;
}
.flex-2{
  flex: 2;
}
.flex-3{
  flex: 3;
}
.no-shrink {
  flex-shrink: 0;
}

/**
 *  offscreen
 *  source from https://30-seconds.github.io/30-seconds-of-css/#offscreen
 */
.offscreen {
  border: 0;
  clip: rect(0 0 0 0);
  height: 1px;
  margin: -1px;
  overflow: hidden;
  padding: 0;
  position: absolute;
  width: 1px; 
}
/**
 *  pretty-text-underline
 *  source from https://30-seconds.github.io/30-seconds-of-css/#pretty-text-underline
 */
.pretty-text-underline {
  display: inline;
  text-shadow: 1px 1px #f5f6f9, -1px 1px #f5f6f9, -1px -1px #f5f6f9, 1px -1px #f5f6f9;
  background-image: linear-gradient(90deg, currentColor 100%, transparent 100%);
  background-position: bottom;
  background-repeat: no-repeat;
  background-size: 100% 1px;
}
.pretty-text-underline::-moz-selection {
  background-color: rgba(0, 150, 255, 0.3);
  text-shadow: none;
}
.pretty-text-underline::selection {
  background-color: rgba(0, 150, 255, 0.3);
  text-shadow: none;
}
/**
 *  toggle-switch
 *  source from https://30-seconds.github.io/30-seconds-of-css/#toggle-switch
 */
.switch {
  position: relative;
  display: inline-block;
  width: 40px;
  height: 20px;
  background-color: rgba(0, 0, 0, 0.25);
  border-radius: 20px;
  transition: all 0.3s;
}
.switch::after {
  content: '';
  position: absolute;
  width: 18px;
  height: 18px;
  border-radius: 18px;
  background-color: white;
  top: 1px;
  left: 1px;
  transition: all 0.3s;
}
input[type='checkbox']:checked + .switch::after {
  transform: translateX(20px);
}
input[type='checkbox']:checked + .switch {
  background-color: #7983ff;
}

/**
 * truncate text 
 */
.ellipsis {
  white-space: nowrap;
  overflow: hidden;
  text-overflow: ellipsis;
}
.ellipsis_multiple {
  display: -webkit-box;
  line-height: 1.5;
  word-break: break-all;
  -webkit-box-orient: vertical;
  -webkit-line-clamp: 2;
  overflow: hidden;
  text-overflow: ellipsis;
}
/**
 * text break
 */
.break-word{
  word-break: break-all;
  word-wrap: break-word;
}
/**
 * no next line 
 */
.no-wrap {
  white-space: nowrap;
}
/**
 * display
 */
.dib {
  display: inline-block;
}
.block-image {
  display: block;
  max-width: 100%;
}
.no-display {
  display: none !important;
}
.hide {
  opacity: 0 !important;
}
/**
 *  position
 */
.relative {
  position: relative;
}
.fixed {
  position: fixed;
}
.absolute {
  position: absolute
}
/**
 * font 
 */
.bold {
  font-weight: bold;
}
/**
 * text 
 */
.t-center {
  text-align: center;
}
.t-right {
  text-align: right;
}
.v-middle {
  vertical-align: middle;
}
/**
 * overflow
 */
.o-hidden {
  overflow: hidden;
}
.ox-hidden {
  overflow-x: hidden;
}
.oy-hidden {
  overflow-y: hidden;
}
/**
  * float
  */
.float {
  float: left;
}
.float-right {
  float: right;
}

.error {
  color: #ff0000;
  font-size: 12px;
  padding-top: 5px;
}

.disabled {
  cursor: not-allowed;
  user-select: none; 
}

.hr1px {
  width: 100%;
  height: 1px;
  background-color: #ddd;
}
.vr1px {
  height: 100%;
  background-color: #ddd;
  width: 1px;
}
@media (min-device-pixel-ratio: 2), (min-resolution: 2dppx) {
  .hr1px {
    transform: scaleY(0.5);
  }
  .vr1px {
    transform: scaleX(0.5);
  }
}
@media (min-device-pixel-ratio: 1.5), (min-resolution: 1.5dppx) {
  .hr1px {
    transform: scaleY(0.5);
  }
  .vr1px {
    transform: scaleX(0.5);
  }
}